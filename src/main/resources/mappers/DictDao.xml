<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ustrip.dao.DictDao">
    <resultMap id="BaseResultMap" type="com.ustrip.entity.Dict">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="type_name" jdbcType="VARCHAR" property="typeName"/>
        <result column="type_name_zh" jdbcType="VARCHAR" property="typeNameZh"/>
        <result column="hotelId" jdbcType="INTEGER" property="hotelId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <trim prefix="(" suffix=")">
                <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, type, type_name, type_name_zh, hotelId
    </sql>
    <select id="selectByExample" parameterType="com.ustrip.entity.DictExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from eb_dict
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        AND
        (
            ( eb_dict.type = 'room'  AND exists (select 1 from eb_hotel_room_type where `status` = 1 and eb_hotel_room_type.room_type_id = eb_dict.id))
            or eb_dict.type = 'board'
            or eb_dict.type = 'bed'
        )
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="page != null">
            limit #{page.begin} , #{page.length}
        </if>
    </select>
    <select id="selectByExample2" parameterType="com.ustrip.entity.DictExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from eb_dict
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="page != null">
            limit #{page.begin} , #{page.length}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from eb_dict
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from eb_dict
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ustrip.entity.DictExample">
        delete from eb_dict
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ustrip.entity.Dict">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into eb_dict (id, type, type_name,
        type_name_zh, hotelId)
        values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR},
        #{typeNameZh,jdbcType=VARCHAR}, #{hotelId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ustrip.entity.Dict">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into eb_dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="typeName != null">
                type_name,
            </if>
            <if test="typeNameZh != null">
                type_name_zh,
            </if>
            <if test="hotelId != null">
                hotelId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="typeName != null">
                #{typeName,jdbcType=VARCHAR},
            </if>
            <if test="typeNameZh != null">
                #{typeNameZh,jdbcType=VARCHAR},
            </if>
            <if test="hotelId != null">
                #{hotelId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ustrip.entity.DictExample" resultType="java.lang.Long">
        select count(*) from eb_dict
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update eb_dict
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.typeName != null">
                type_name = #{record.typeName,jdbcType=VARCHAR},
            </if>
            <if test="record.typeNameZh != null">
                type_name_zh = #{record.typeNameZh,jdbcType=VARCHAR},
            </if>
            <if test="record.hotelId != null">
                hotelId = #{record.hotelId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update eb_dict
        set id = #{record.id,jdbcType=INTEGER},
        type = #{record.type,jdbcType=VARCHAR},
        type_name = #{record.typeName,jdbcType=VARCHAR},
        type_name_zh = #{record.typeNameZh,jdbcType=VARCHAR},
        hotelId = #{record.hotelId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ustrip.entity.Dict">
        update eb_dict
        <set>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="typeName != null">
                type_name = #{typeName,jdbcType=VARCHAR},
            </if>
            <if test="typeNameZh != null">
                type_name_zh = #{typeNameZh,jdbcType=VARCHAR},
            </if>
            <if test="hotelId != null">
                hotelId = #{hotelId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ustrip.entity.Dict">
        update eb_dict
        set type         = #{type,jdbcType=VARCHAR},
            type_name    = #{typeName,jdbcType=VARCHAR},
            type_name_zh = #{typeNameZh,jdbcType=VARCHAR},
            hotelId      = #{hotelId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>